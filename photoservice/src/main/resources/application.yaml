spring:
  application:
    name: photoservice
  config:
    import: ${SPRING_CONFIG_IMPORT}
  datasource:
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    url: ${DATASOURCE_URL}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST}
    port: 5672
    username: guest
    password: guest

management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      access: unrestricted

  info:
    env:
      enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        permitted-number-of-calls-in-half-open-state: 2
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000

server:
  port: 8086

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: ${EUREKA_SERVER_URL}

info:
  app:
    name: Photo Service
    version: 1.0.0
    description: This service provides photos.
aws:
  s3:
    region: eu-central-1
    bucket: pixel-photos-bucket
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}